{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network."
      }
    },
    "applicationGatewayName": {
      "type": "string",
      "defaultValue": "testappgw",
      "metadata": {
        "description": "Application Gateway Name"
      }
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "WAF_Medium",
        "WAF_Large"
      ],
      "defaultValue": "WAF_Medium",
      "metadata": {
        "description": "Application Gateway size, using WAF"
      }
    },
    "wafMode": {
      "type": "string",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "defaultValue": "Detection",
      "metadata": {
        "description": "WAF Mode"
      }
    },
    "applicationGatewayInstanceCount": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "application gateway instance count"
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    }
  },
  "variables": {

    // Overall VNet Prefix
    "VNetPrefix": "10.0.0.0/16",

    // Subnet Names and Prefixes
    "Subnet1Name": "Logstash-Subnet",
    "Subnet1Prefix": "10.0.1.0/24",
    "Subnet2Name": "Kibana-Subnet",
    "Subnet2Prefix": "10.0.2.0/24",
    "Subnet3Name": "HostedWatchers-Subnet",
    "Subnet3Prefix": "10.0.3.0/24",
    "Subnet4Name": "InternalResources-Subnet",
    "Subnet4Prefix": "10.0.4.0/24",
    "Subnet5Name": "Management-Subnet",
    "Subnet5Prefix": "10.0.5.0/24",
    "Subnet6Name": "AppGw-Subnet",
    "Subnet6Prefix": "10.0.6.0/24",
    "Subnet7Name": "DomainServices-Subnet",
    "Subnet7Prefix": "10.0.7.0/24",

    // Subnet Reference for Test VMs
    "Subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('Subnet1Name'))]",
    "Subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('Subnet2Name'))]",

    // Subnet Reference for Application Gateway
    "Subnet6Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('Subnet6Name'))]",

    // Subnet for Azure AD Domain Services (AADDS)
    "Subnet7Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('Subnet7Name'))]",

    // Variables for test VMs
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "windowsOSVersion": "2016-Datacenter",
    "virtualMachineSize": "Standard_D1_v2",
    "numberOfVMsPerGroup": 2,

    // Test VM name prefixes, static private IP addresses, and DNS names
    "ingestionVmNamePrefix": "ingestvm",
    "ingestionListVmPrivateIpAddresses": [ "10.0.1.4", "10.0.1.5" ],
    "ingestionDnsName": "ingestion.carlostestdomain.com",
    "customerVmNamePrefix": "custvm",
    "customerListVmPrivateIpAddresses": [ "10.0.2.4", "10.0.2.5" ],
    "customerDnsName": "velocity.carlostestdomain.com",
    "c4VmNamePrefix": "c4vm",
    "c4ListVmPrivateIpAddresses": [ "10.0.2.6", "10.0.2.7" ],
    "c4DnsName": "command.carlostestdomain.com",

    // Application Gateway variables
    "appGwPublicIpName": "ApplicationGatewayPublicIp",
    "appGwPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appGwPublicIpName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',parameters('applicationGatewayName'))]",
    "wafRuleSetType": "OWASP",
    "wafRuleSetVersion": "3.0"
  },
  "resources": [
    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "VNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet2Prefix')]"
            }
          },
          {
            "name": "[variables('Subnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet3Prefix')]"
            }
          },
          {
            "name": "[variables('Subnet4Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet4Prefix')]"
            }
          },
          {
            "name": "[variables('Subnet5Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet5Prefix')]"
            }
          },
          {
            "name": "[variables('Subnet6Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet6Prefix')]"
            }
          },
          {
            "name": "[variables('Subnet7Name')]",
            "properties": {
              "addressPrefix": "[variables('Subnet7Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('appGwPublicIpName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIP-AppGw"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "name": "[parameters('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ApplicationGateway"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('appGwPublicIpName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('applicationGatewaySize')]",
          "tier": "WAF",
          "capacity": "[parameters('applicationGatewayInstanceCount')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('Subnet6Ref')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('appGwPublicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "FrontendPort-80",
            "properties": {
              "Port": 80
            }
          },
          {
            "name": "FrontendPort-5044",
            "properties": {
              "Port": 5044
            }
          },
          {
            "name": "FrontendPort-5045",
            "properties": {
              "Port": 5045
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "Ingestion-BackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "ipAddress": "[variables('ingestionListVmPrivateIpAddresses')[0]]"
                },
                {
                  "ipAddress": "[variables('ingestionListVmPrivateIpAddresses')[1]]"
                }
              ]
            }
          },
          {
            "name": "Customer-BackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "ipAddress": "[variables('customerListVmPrivateIpAddresses')[0]]"
                },
                {
                  "ipAddress": "[variables('customerListVmPrivateIpAddresses')[1]]"
                }
              ]
            }
          },
          {
            "name": "C4-BackendPool",
            "properties": {
              "BackendAddresses": [
                {
                  "ipAddress": "[variables('c4ListVmPrivateIpAddresses')[0]]"
                },
                {
                  "ipAddress": "[variables('c4ListVmPrivateIpAddresses')[1]]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "Ingestion-BackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          },
          {
            "name": "Customer-BackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Enabled"
            }
          },
          {
            "name": "C4-BackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Enabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "Ingestion-Listener-HTTP-5044",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/FrontendPort-5044')]"
              },
              "Protocol": "Http",
              "SslCertificate": null,
              "HostName": "[variables('ingestionDnsName')]",
              "RequireServerNameIndication": "false"
            }
          },
          {
            "name": "Customer-Listener-HTTP-80",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/FrontendPort-80')]"
              },
              "Protocol": "Http",
              "SslCertificate": null,
              "HostName": "[variables('customerDnsName')]",
              "RequireServerNameIndication": "false"
            }
          },
          {
            "name": "C4-Listener-HTTP-80",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/FrontendPort-80')]"
              },
              "Protocol": "Http",
              "SslCertificate": null,
              "HostName": "[variables('c4DnsName')]",
              "RequireServerNameIndication": "false"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "Ingestion-RoutingRule-Basic",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/Ingestion-Listener-HTTP-5044')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/Ingestion-BackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/Ingestion-BackendHttpSettings')]"
              }
            }
          },
          {
            "Name": "Customer-RoutingRule-Basic",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/Customer-Listener-HTTP-80')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/Customer-BackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/Customer-BackendHttpSettings')]"
              }
            }
          },
          {
            "Name": "C4-RoutingRule-Basic",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/C4-Listener-HTTP-80')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/C4-BackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/C4-BackendHttpSettings')]"
              }
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "[parameters('wafMode')]",
          "ruleSetType": "[variables('wafRuleSetType')]",
          "ruleSetVersion": "[variables('wafRuleSetVersion')]",
          "disabledRuleGroups": []
        }
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('ingestionVmNamePrefix'), padLeft(copyindex(1),2,'0'), '-nic1')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Ingestion-NIC-VMs"
      },
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "ingestionNicLoop"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('Subnet1Ref')]"
              },
              "privateIPAddress": "[variables('ingestionListVmPrivateIpAddresses')[copyIndex()]]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "ipcon"
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('customerVmNamePrefix'), padLeft(copyindex(1),2,'0'), '-nic1')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Customer-NIC-VMs"
      },
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "customerNicLoop"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('Subnet2Ref')]"
              },
              "privateIPAddress": "[variables('customerListVmPrivateIpAddresses')[copyIndex()]]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "ipcon"
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('c4VmNamePrefix'), padLeft(copyindex(1),2,'0'), '-nic1')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "C4-NIC-VMs"
      },
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "c4NicLoop"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('Subnet2Ref')]"
              },
              "privateIPAddress": "[variables('c4ListVmPrivateIpAddresses')[copyIndex()]]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "ipcon"
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('ingestionVmNamePrefix'), padLeft(copyindex(1),2,'0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "ingestionVirtualMachineLoop"
      },
      "tags": {
        "displayName": "Ingestion-VMs"
      },
      "dependsOn": [
        "ingestionNicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('ingestionVmNamePrefix'), padLeft(copyindex(1),2,'0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('VD-',variables('ingestionVmNamePrefix'), padLeft(copyindex(1),2,'0'), '-OS-Disk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('',variables('ingestionVmNamePrefix'), padLeft(copyindex(1),2,'0'), '-nic1'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('customerVmNamePrefix'), padLeft(copyindex(1),2,'0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "customerVirtualMachineLoop"
      },
      "tags": {
        "displayName": "Customer-VMs"
      },
      "dependsOn": [
        "customerNicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('customerVmNamePrefix'), padLeft(copyindex(1),2,'0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('VD-',variables('customerVmNamePrefix'), padLeft(copyindex(1),2,'0'), '-OS-Disk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('',variables('customerVmNamePrefix'), padLeft(copyindex(1),2,'0'), '-nic1'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('c4VmNamePrefix'), padLeft(copyindex(1),2,'0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "c4VirtualMachineLoop"
      },
      "tags": {
        "displayName": "C4-VMs"
      },
      "dependsOn": [
        "c4NicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('c4VmNamePrefix'), padLeft(copyindex(1),2,'0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('VD-',variables('c4VmNamePrefix'), padLeft(copyindex(1),2,'0'), '-OS-Disk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('',variables('c4VmNamePrefix'), padLeft(copyindex(1),2,'0'), '-nic1'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('ingestionVmNamePrefix'), padLeft(copyindex(1),2,'0'),'/','CustomScriptExtension')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Ingestion-CustomScriptExtension-IIS"
      },
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "ingestionExtensionLoop"
      },
      "dependsOn": [
        "ingestionVirtualMachineLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/davidmu1/samplescripts/master/appgatewayurl.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File appgatewayurl.ps1"
        },
        "protectedSettings": {}
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('customerVmNamePrefix'), padLeft(copyindex(1),2,'0'),'/','CustomScriptExtension')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Customer-CustomScriptExtension-IIS"
      },
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "customerExtensionLoop"
      },
      "dependsOn": [
        "customerVirtualMachineLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/davidmu1/samplescripts/master/appgatewayurl.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File appgatewayurl.ps1"
        },
        "protectedSettings": {}
      }
    },
    {
      "apiVersion": "2017-12-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('c4VmNamePrefix'), padLeft(copyindex(1),2,'0'),'/','CustomScriptExtension')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "C4-CustomScriptExtension-IIS"
      },
      "copy": {
        "count": "[variables('numberOfVMsPerGroup')]",
        "name": "c4ExtensionLoop"
      },
      "dependsOn": [
        "c4VirtualMachineLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/davidmu1/samplescripts/master/appgatewayurl.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File appgatewayurl.ps1"
        },
        "protectedSettings": {}
      }
    }

  ],
  "outputs": {}
}
